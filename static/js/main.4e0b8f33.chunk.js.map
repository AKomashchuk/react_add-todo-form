{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","findUserName","todoUser","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","TodoList","todos","map","preparedTodos","todosFromServer","userList","App","useState","setTodos","setTitle","setUserId","isError","setIsError","action","method","onSubmit","event","preventDefault","arrId","maxId","Math","max","userTodo","newTodo","currentTodo","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e0b8f33.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../../api/users';\n\ntype Props = { user?: User };\n\nfunction findUserName(id?: number) {\n  const todoUser = usersFromServer.find(user => user.id === id);\n\n  return todoUser?.name;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {findUserName(user?.id)}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        <p>{todo.title}</p>\n        <p>{todo.completed}</p>\n      </h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={todo.id} className=\"card\">\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\n\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst preparedTodos = todosFromServer.map(todo => {\n  const userList = usersFromServer.find(user => user.id === todo.userId);\n\n  return ({\n    ...todo,\n    user: userList,\n  });\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isError, setIsError] = useState(false);\n\n  function resetFields() {\n    setTitle('');\n    setUserId(0);\n\n    setIsError(false);\n  }\n\n  function onSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (!title || !userId) {\n      setIsError(true);\n\n      return;\n    }\n\n    const arrId = todosFromServer.map(todo => todo.id);\n    const maxId = Math.max(...arrId);\n    const userTodo = usersFromServer.find(user => user.id === userId);\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: userTodo,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n    resetFields();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n        className=\"box\"\n      >\n        <div className=\"field\">\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={title}\n              data-cy=\"titleInput\"\n              className=\"input\"\n              placeholder=\"Text input\"\n              onChange={(event) => setTitle(event.target.value)}\n            />\n            {!title && isError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <div className=\"select\">\n              <select\n                data-cy=\"userSelect\"\n                onChange={(event) => setUserId(+event.target.value)}\n                value={userId}\n              >\n                <option value={0} disabled>\n                  Choose a user\n                </option>\n                {usersFromServer.map(user => (\n                  <option\n                    value={user.id}\n                    key={user.email}\n                  >\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n\n              {!userId && isError && (\n                <span className=\"error\">Please choose a user</span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <button\n            className=\"button is-primary\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}